===============================
==========super================
===============================

1. The super() builtin returns a proxy object that allows you to refer parent class by 'super'.
2. In Python, super() built-in has two major use cases:
==>Allows us to avoid using base class explicitly
==>Working with Multiple Inheritance

class Mammal(object):
  def __init__(self, mammalName):
    print(mammalName, 'is a warm-blooded animal.')
    
class Dog(Mammal):
  def __init__(self):
    print('Dog has four legs.')
    super().__init__('Dog')
    
d1 = Dog()
#Dog has four legs.
#Dog is a warm-blooded animal.
